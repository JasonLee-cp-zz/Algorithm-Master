int n;

Tree* construct_BT(vector<int>&preorder, vector<int>&inorder, int index, int i, int j){
    if(index >= n || i > j) return NULL;
    if(i == j) return new Tree(preorder[index]);
    Tree* node = new Tree(preorder[index]);

    int offset;
    for(int k=i; k<=j; k++){
        if(inorder[k] == preorder[index]){
            offset = k;
            break;
        }
    }

    node->left = construct_BT(preorder,inorder,index+1,i,offset-1);
    node->right = construct_BT(preorder,inorder,index+(offset-i)+1,offset+1,j);
    return node;
}

Tree* solve(vector<int>& preorder, vector<int>& inorder) {
    n = preorder.size();
    return construct_BT(preorder,inorder,0,0,n-1);
}